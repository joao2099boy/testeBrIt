// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace _20241022_ApiTesteJoao.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241025130004_MappingPostsEntity")]
    partial class MappingPostsEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("ClienteId");

                    b.HasIndex("Documento")
                        .IsUnique();

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FornecedorId"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("FornecedorId");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Fornecedores", (string)null);
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.NotaFiscal", b =>
                {
                    b.Property<int>("NotaFiscalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotaFiscalId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("NotaFiscalId");

                    b.HasIndex("ClienteId");

                    b.ToTable("NotasFiscais", (string)null);
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Body");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Title");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("DADOSAPI", (string)null);
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProdutoId"));

                    b.Property<int>("Estoque")
                        .HasColumnType("integer");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("ProdutoId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.NotaFiscalProduto", b =>
                {
                    b.Property<int>("NotaFiscalProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotaFiscalProdutoId"));

                    b.Property<int>("NotaFiscalId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecoUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("NotaFiscalProdutoId");

                    b.HasIndex("NotaFiscalId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("NotaFiscalProdutos", (string)null);
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.NotaFiscal", b =>
                {
                    b.HasOne("_20241022_ApiTestDomain.Entidades.Cliente", "Cliente")
                        .WithMany("NotasFiscais")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.Produto", b =>
                {
                    b.HasOne("_20241022_ApiTestDomain.Entidades.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.NotaFiscalProduto", b =>
                {
                    b.HasOne("_20241022_ApiTestDomain.Entidades.NotaFiscal", "NotaFiscal")
                        .WithMany("NotaFiscalProdutos")
                        .HasForeignKey("NotaFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_20241022_ApiTestDomain.Entidades.Produto", "Produto")
                        .WithMany("NotaFiscalProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NotaFiscal");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.Cliente", b =>
                {
                    b.Navigation("NotasFiscais");
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.Fornecedor", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.NotaFiscal", b =>
                {
                    b.Navigation("NotaFiscalProdutos");
                });

            modelBuilder.Entity("_20241022_ApiTestDomain.Entidades.Produto", b =>
                {
                    b.Navigation("NotaFiscalProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
